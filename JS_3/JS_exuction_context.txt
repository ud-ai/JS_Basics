1. Global Execution Context
2.Function Execution Context
3.Eval Execution Context

Js code is exectued in 2 phases:
1. Memory creation phase:
                         Only memory is allocated to variables and other things in this phase(No Execution)

2.Execution phase


STEPS:
1. Global Execution: whole code is allocated in "this"

2.Memory phase: all variables are stored and started as undefined 
                and Function is defined

3. Execution phase: values are inserted in the variables
                    whenever a Function is called then a new variable environment and execution thread is made (both memory and execution phase is done again)
                    when "return" is used it returns the value to the global execution


4. After the usage the new variable and execution thread is deleted 

CALL STACK:

--> It uses LIFO

